name: CI

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

defaults:
  run:
    shell: bash

jobs:
  lint_and_unit_tests:
    name: Lint and validate
    runs-on: ubuntu-latest
    outputs:
      changes: ${{steps.changes.outputs.changes}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Look for changes
        id: 'changes'
        run: |
          git fetch origin main --depth=1 --quiet
          ndiff=$(git diff origin/main --name-only)
          if [[ "$ndiff" == *"hello-world"* ]]; then
            echo "::set-output name=changes::true"
          fi
          
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '14.18.0'

      - run: yarn --cwd hello-world --frozen-lockfile

      - name: run yarn lint
        run: yarn --cwd hello-world lint

  build_assets:
    name: build assets
    needs: lint_and_unit_tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '14.18.0'

      - run: yarn --cwd hello-world --frozen-lockfile

      - name: build konnect client on push
        id: build-client
        run: |
          yarn --cwd hello-world build

          mkdir -p artifacts/hello-world
          cp -R hello-world/dist artifacts/hello-world

          if [[ -d hello-world/dist ]]; then
            tar -czvf artifacts/hello-world/hello-world.tar.gz hello-world/dist
          fi

          if [[ -d hello-world/dist ]]; then
            cp hello-world/netlify.toml artifacts/hello-world/dist
          fi

      - name: Temporarily save artifacts
        if: hashFiles('artifacts/') != ''
        uses: actions/upload-artifact@v2
        id: save_artifacts
        with:
          name: artifacts
          path: artifacts

  netlify_preview:
    name: netlify_preview
    needs: [lint_and_unit_tests, build_assets]
    if: ${{ github.event_name == 'push' || needs.lint_and_unit_tests.outputs.changes }}
    runs-on: ubuntu-latest
    outputs:
      deploy_id: ${{steps.netlify.outputs.deploy_id}}
      deploy_url: ${{steps.netlify.outputs.deploy_url}}
    steps:
    - name: Checkout Source Code
      uses: actions/checkout@v2

    - name: download_artifacts
      uses: actions/download-artifact@v2
      id: download_artifacts
      with:
        name: artifacts

    - name: Deploy netlify preview on push
      id: netlify
      run: |
        netlifyDeploy=$(netlify deploy \
        --dir ./hello-world/dist/ \
        --functions hello-world/netlify/functions/src/ \
        --timeout 180 \
        --json | tr -d '\n')

        end=$((SECONDS+120))
        while [ $SECONDS -lt $end ]; do
          if [[ $netlifyDeploy ]]; then
            echo "site is deployed!"
            echo "::set-output name=deploy_id ::$(echo $netlifyDeploy|jq '.deploy_id')"
            echo "::set-output name=deploy_url ::$(echo $netlifyDeploy|jq '.deploy_url')"
            break
          fi
          sleep 1
        done
      env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  smoketest:
    name: Smoke test
    needs: [lint_and_unit_tests, netlify_preview]
    runs-on: ubuntu-20.04
    if: ${{needs.netlify_preview.outputs.deploy_url}} 
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: check env
        id: check_env
        run: |
          echo "id: ${{needs.netlify_preview.outputs.deploy_id}}"
          echo "url: ${{needs.netlify_preview.outputs.deploy_url}}"
          echo "run client smoketest here with url: ${{needs.netlify_preview.outputs.deploy_url}}"

  promote_client_dev:
    name: Promote client in dev env
    needs: [smoketest, netlify_preview]
    runs-on: ubuntu-20.04
    if: ${{needs.netlify_preview.outputs.deploy_id && github.event_name != 'pull_request'}}
    steps:
      - name: install netlify cli
        run: |
          yarn global add netlify-cli
      - name: promote
        run: |
          netlify api lockDeploy --data '{"deploy_id": ${{needs.netlify_preview.outputs.deploy_id}}}'
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  tag_release:
    name: tag release 
    needs: promote_client_dev
    runs-on: ubuntu-20.04
    if: ${{github.event_name == 'push' && github.ref == 'refs/heads/main'}}
    steps:
      - name: get current tag 
        id: current_tag
        run: |
          git fetch --tags
          git fetch --prune --unshallow || true

          CURRENT_TAG=$(git describe --match "af-*" --abbrev=0 --always --tags || true)
          if [[ ${CURRENT_TAG} == af* ]]; then
            echo "::set-output name=current_tag::${CURRENT_TAG#af-}"
          else
            echo "::set-output name=current_tag::v0.0.0"
          fi

      - name: bump tag version
        id: bump-semver
        uses: actions-ecosystem/action-bump-semver@v1.0.0
        with:
          current_version: ${{ steps.current_tag.current_tag }}
          level: prerelease

      - name: Draft GH Release
        id: draft
        uses: release-drafter/release-drafter@v5
        with:
          name: af-${{ steps.bump-semver.outputs.new_version }}
          tag: af-${{ steps.bump-semver.outputs.new_version }}
          version: af-${{ steps.bump-semver.outputs.new_version }}
          publish: true
          prerelease: true
          commitish: ${{ github.ref }}

      - name: create release
        uses: ncipollo/release-action@v1
        with: 
          allowUpdates: true
          artifacts: .temp/konnect-client.tar.gz
          prerelease: true
          bodyFile: ${{steps.draft.outputs.body}}
          tag: af-${{ steps.bump-semver.outputs.new_version }}
          token: ${{ secrets.GITHUB_TOKEN }}

